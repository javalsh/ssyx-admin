{"remainingRequest":"/Users/liushaohua/Project/ssyx-web/ssyx-admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liushaohua/Project/ssyx-web/ssyx-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liushaohua/Project/ssyx-web/ssyx-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liushaohua/Project/ssyx-web/ssyx-admin/src/views/activity/activityInfo/rule.vue?vue&type=template&id=306a1908&","dependencies":[{"path":"/Users/liushaohua/Project/ssyx-web/ssyx-admin/src/views/activity/activityInfo/rule.vue","mtime":1678783600000},{"path":"/Users/liushaohua/Project/ssyx-web/ssyx-admin/node_modules/cache-loader/dist/cjs.js","mtime":1688442891160},{"path":"/Users/liushaohua/Project/ssyx-web/ssyx-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1688442881343},{"path":"/Users/liushaohua/Project/ssyx-web/ssyx-admin/node_modules/cache-loader/dist/cjs.js","mtime":1688442891160},{"path":"/Users/liushaohua/Project/ssyx-web/ssyx-admin/node_modules/vue-loader/lib/index.js","mtime":1688442880248}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}